name: Build and Publish Docker Image

# on:
#   pull_request:
#     branches:
#       - dev
#       - release
#       - main

jobs:
  build_and_publish:
    runs-on: self-hosted

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install express axios

    - name: Get the current date and time
      id: datetime
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M%S')"

    - name: Determine branch name
      id: branch_name
      run: echo "::set-output name=branch::$(echo $GITHUB_REF | awk -F/ '{print $3}')"

    - name: Build Docker image with a unique tag
      run: |
        sudo chmod 666 /var/run/docker.sock
        DOCKER_USER="${{secrets.DOCKER_USERNAME}}"
        branch_name="${{steps.branch_name.outputs.branch}}"
        
        if [ "$branch_name" == "release" ]; then
          image_tag="${DOCKER_USER}/prod-$(echo ${{steps.datetime.outputs.date}})"
        elif [ "$branch_name" == "main" ]; then
          image_tag="${DOCKER_USER}/prod-$(echo ${{steps.datetime.outputs.date}})"
        else
          image_tag="${DOCKER_USER}/integ-$(echo ${{steps.datetime.outputs.date}})"
        fi

        sudo docker build -t "$image_tag" -f ./coffee-project/Dockerfile .

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        DOCKER_USER="${{secrets.DOCKER_USERNAME}}"
        branch_name="${{steps.branch_name.outputs.branch}}"
        
        if [ "$branch_name" == "release" ] || [ "$branch_name" == "main" ]; then
          image_tag="${DOCKER_USER}/prod-$(echo ${{steps.datetime.outputs.date}})"
        else
          image_tag="${DOCKER_USER}/integ-$(echo ${{steps.datetime.outputs.date}})"
        fi

        docker push "$image_tag"
